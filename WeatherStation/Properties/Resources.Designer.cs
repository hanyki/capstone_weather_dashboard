//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WeatherStation.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WeatherStation.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;KAAF&quot;,&quot;Apalachicola&quot;,&quot;FL&quot;,&quot;29.72999954&quot;,&quot;-85.02999878&quot;
        ///&quot;KABE&quot;,&quot;Allentown&quot;,&quot;PA&quot;,&quot;40.65000153&quot;,&quot;-75.44000244&quot;
        ///&quot;KABQ&quot;,&quot;Albuquerque&quot;,&quot;NM&quot;,&quot;35.04000092&quot;,&quot;-106.61000061&quot;
        ///&quot;KABR&quot;,&quot;Aberdeen&quot;,&quot;SD&quot;,&quot;45.45000076&quot;,&quot;-98.41999817&quot;
        ///&quot;KABY&quot;,&quot;Albany&quot;,&quot;GA&quot;,&quot;31.54000092&quot;,&quot;-84.19000244&quot;
        ///&quot;KACB&quot;,&quot;Bellaire&quot;,&quot;MI&quot;,&quot;44.99000168&quot;,&quot;-85.19999695&quot;
        ///&quot;KACK&quot;,&quot;Nantucket&quot;,&quot;MA&quot;,&quot;41.25000000&quot;,&quot;-70.05999756&quot;
        ///&quot;KACQ&quot;,&quot;Waseca&quot;,&quot;MN&quot;,&quot;44.06999969&quot;,&quot;-93.55000305&quot;
        ///&quot;KACT&quot;,&quot;Waco&quot;,&quot;TX&quot;,&quot;31.61000061&quot;,&quot;-97.23000336&quot;
        ///&quot;KACV&quot;,&quot;Arcata&quot;,&quot;CA&quot;,&quot;40.97999954&quot;,&quot;-124.1 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AirportGeocodes {
            get {
                return ResourceManager.GetString("AirportGeocodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Seagoville&quot;,&quot;TX&quot;,&quot;-96.5383228&quot;,&quot;32.6395776&quot;
        ///&quot;Mammoth Spring&quot;,&quot;AR&quot;,&quot;-91.5406968&quot;,&quot;36.4956181&quot;
        ///&quot;Suffolk&quot;,&quot;VA&quot;,&quot;-76.5835621&quot;,&quot;36.7282054&quot;
        ///&quot;Miles&quot;,&quot;TX&quot;,&quot;-100.1823084&quot;,&quot;31.5973798&quot;
        ///&quot;Mount Holly&quot;,&quot;AR&quot;,&quot;-92.9548857&quot;,&quot;33.3026262&quot;
        ///&quot;Panama&quot;,&quot;IL&quot;,&quot;-89.5242528&quot;,&quot;39.0294908&quot;
        ///&quot;Cobbs Creek&quot;,&quot;VA&quot;,&quot;-76.3968899&quot;,&quot;37.5056916&quot;
        ///&quot;Blue Mountain Lake&quot;,&quot;NY&quot;,&quot;-74.4434931&quot;,&quot;43.8553412&quot;
        ///&quot;Hersey&quot;,&quot;MI&quot;,&quot;-85.4444913&quot;,&quot;43.8486301&quot;
        ///&quot;Blooming Grove&quot;,&quot;TX&quot;,&quot;-96.7158250&quot;,&quot;32.0920967&quot;
        ///&quot;Kake&quot;,&quot;AK&quot;,&quot;-133.9472222&quot;,&quot;56.9758333&quot;
        ///&quot;New Park&quot;,&quot;PA&quot;,&quot;-7 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CityGeocodes {
            get {
                return ResourceManager.GetString("CityGeocodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aleutians East,AK,66.3593739,-128.892553
        ///Aleutians West,AK,64.1932177,-141.3978202
        ///Anchorage,AK,61.4754736,-148.3469763
        ///Bethel,AK,66.1543696,-144.4724755
        ///Bristol Bay,AK,59.1262597,-155.7547936
        ///Denali,AK,65.0578366,-145.6338829
        ///Dillingham,AK,61.2126821,-153.626358
        ///Fairbanks North Star,AK,65.5504862,-144.4254653
        ///Haines,AK,60.5733864,-130.9020995
        ///Juneau,AK,59.2913983,-132.4280429
        ///Kenai Peninsula,AK,61.4798843,-147.2843636
        ///Ketchikan Gateway,AK,55.9126322,-130.3648109
        ///Kodiak Island,AK,59.0381752,-149.1680347
        ///Lak [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CountyGeocodes {
            get {
                return ResourceManager.GetString("CountyGeocodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;00501&quot;,&quot;40.8185476&quot;,&quot;-73.0424524&quot;,&quot;Holtsville&quot;,&quot;NY&quot;,&quot;Suffolk&quot;
        ///&quot;00544&quot;,&quot;40.8185476&quot;,&quot;-73.0424524&quot;,&quot;Holtsville&quot;,&quot;NY&quot;,&quot;Suffolk&quot;
        ///&quot;01001&quot;,&quot;42.1008179&quot;,&quot;-72.58054&quot;,&quot;Agawam&quot;,&quot;MA&quot;,&quot;Hampden&quot;
        ///&quot;01002&quot;,&quot;42.433715&quot;,&quot;-72.355041&quot;,&quot;Amherst&quot;,&quot;MA&quot;,&quot;Hampshire&quot;
        ///&quot;01003&quot;,&quot;42.395972&quot;,&quot;-72.517199&quot;,&quot;Amherst&quot;,&quot;MA&quot;,&quot;Hampshire&quot;
        ///&quot;01004&quot;,&quot;42.3767476&quot;,&quot;-72.5177524&quot;,&quot;Amherst&quot;,&quot;MA&quot;,&quot;Hampshire&quot;
        ///&quot;01005&quot;,&quot;42.4845309&quot;,&quot;-72.023521&quot;,&quot;Barre&quot;,&quot;MA&quot;,&quot;Worcester&quot;
        ///&quot;01007&quot;,&quot;42.389777&quot;,&quot;-72.331642&quot;,&quot;Belchertown&quot;,&quot;MA&quot;,&quot;Hampshire&quot;
        ///&quot;01008&quot;,&quot;42.270324&quot;,&quot;-72 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ZipCodeTable {
            get {
                return ResourceManager.GetString("ZipCodeTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NVZ011,89301,89311,89314,89315,89317,89318,89319
        ///UTZ007,84028,84038,84064,84086
        ///IDZ015,83301,83302,83303,83316,83321,83328,83334,83341,83344
        ///TXZ037,79220,79229,79243,79370
        ///TXZ100,76372,76374,76450,76460,76481
        ///ILZ035,61411,61416,61420,61422,61438,61440,61455,61470,61475,62326,62374
        ///FLZ050,33701,33702,33703,33704,33705,33706,33707,33708,33709,33710,33711,33712,33713,33714,33715,33716,33728,33729,33730,33731,33732,33733,33734,33736,33737,33738,33740,33741,33742,33743,33744,33747,33755,33756,33757,33758,33759,3 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ZoneZipCodes {
            get {
                return ResourceManager.GetString("ZoneZipCodes", resourceCulture);
            }
        }
    }
}
